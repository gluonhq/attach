apply from: rootProject.file("gradle/native-build.gradle")

import java.time.Duration

apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'de.marcphilipp.nexus-publish'

jar {
    exclude "**/impl/Desktop**", "**/impl/IOS**", "**/impl/Android**", "META-INF/substrate"
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier.set('sources')
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    archiveClassifier.set('javadoc')
}

publishing {
    publications {
        maven(MavenPublication) {

            from components.java
            artifact sourcesJar
            artifact javadocJar
            artifact androidJar
            artifact iosJar
            artifact desktopJar

            pom {
                name = "Gluon Attach (${project.name})"
                description = "API for accessing ${project.name} features"
                url = 'https://github.com/gluonhq/attach/'

                developers {
                    developer {
                        name = 'Johan Vos'
                        email = 'johan.vos@gluonhq.com'
                        organization = 'Gluon'
                        organizationUrl = 'https://gluonhq.com'
                    }
                    developer {
                        name = 'Joeri Sykora'
                        email = 'joeri.sykora@gluonhq.com'
                        organization = 'Gluon'
                        organizationUrl = 'https://gluonhq.com'
                    }
                    developer {
                        name = 'Erwin Morrhey'
                        email = 'erwin.morrhey@gluonhq.com'
                        organization = 'Gluon'
                        organizationUrl = 'https://gluonhq.com'
                    }
                }

                licenses {
                    license {
                        name = 'The GNU General Public License'
                        url = 'https://opensource.org/licenses/GPL-3.0'
                        distribution = 'repo'
                    }
                }

                scm {
                    connection = 'scm:git:https://github.com/gluonhq/attach.git'
                    developerConnection = 'scm:git:ssh://git@github.com/gluonhq/attach.git'
                    url = 'https://github.com/gluonhq/attach'
                }
            }

            pom.withXml {
                Node pomNode = asNode()
                pomNode.dependencies.'*'.findAll() {
                    it.groupId.text() == 'org.openjfx'
                }.each {
                    it.parent().remove(it)
                }
            }
        }
    }
}

signing {
    sign publishing.publications.maven
    required = { gradle.taskGraph.hasTask(publish) && !version.endsWith("SNAPSHOT") }
}

nexusPublishing {
    repositories {
        sonatype()
    }
    // credentials are shared from staging plugin
    clientTimeout = Duration.ofMinutes(5)
    connectTimeout = Duration.ofMinutes(5)
}
